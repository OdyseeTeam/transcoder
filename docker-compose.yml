version: '3.7'

services:
  conductor:
    image: odyseeteam/transcoder-conductor:dev
    container_name: conductor
    command:
      - ./transcoder
      - conductor
      - --debug
      # - --rmq-addr=amqp://guest:guest@rabbitmq/
      # - --http-url=http://tower:8080
      # - --dev-mode
      # - --state-file=/storage/state.json
    volumes:
      - ${PWD}/conductor.ex.yml:/app/conductor.yml
    ports:
      - "8080:8080"
    # build:
    #   context: .
    #   dockerfile: Dockerfile-tower
    depends_on:
      - redis
      - db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 120s
  cworker:
    image: odyseeteam/transcoder-cworker:dev
    container_name: cworker
    command:
      - ./transcoder
      - worker
    # build:
    #   context: .
    #   dockerfile: Dockerfile-worker
    depends_on: ["redis"]
    volumes:
      - ${PWD}/worker.ex.yml:/app/worker.yml
  # asynqmon:
  #   image: hibiken/asynqmon:latest
  #   container_name: asynqmon
  #   environment:
  #     - REDIS_URL=redis://:odyredis@redis:6379/1
  #   ports:
  #     - '9090:8080'
  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    command: >
      --requirepass odyredis --appendonly yes
    labels:
      com.centurylinklabs.watchtower.enable: false
    restart: unless-stopped
  db:
    image: postgres:14
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: odyseeteam
    volumes:
      - db-data:/var/lib/postgresql/data
    command:
      - -clogging_collector=on
      - -clog_statement=all
      - -clog_destination=stderr
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "38861:38861"
      - "41949:41949"
    volumes:
      - minio-data:/data
    environment:
      MINIO_ACCESS_KEY: ody
      MINIO_SECRET_KEY: odyseetes3
    command: server --address 0.0.0.0:9000 /data
  minio-prepare:
    image: minio/mc
    volumes:
      - minio-data:/data
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 ody odyseetes3;
      /usr/bin/mc mb myminio/transcoded;
      /usr/bin/mc policy set download myminio/transcoded;
      exit 0;
      "

volumes:
  tower-data: {}
  db-data: {}
  minio-data: {}
  redis-data: {}
